{"version":3,"sources":["pages/Messenger.js","themes/theme.js","assets/bg-img.png","themes/loginAndRegister.js","components/RegisterForm/LoginRedirect.js","components/RegisterForm/RegisterForm.js","services/register.js","pages/Register.js","components/LoginForm/RegisterRedirect.js","components/LoginForm/LoginForm.js","services/login.js","pages/Login.js","themes/messengerStyle.js","components/ChatBox.js","components/UserPanel/User.js","components/UserPanel/UserList.js","components/UserPanel/FilterContacts/FilterInput.js","components/UserPanel/UserPanel.js","services/users.js","services/messenger.js","components/AccountMenu.js","components/UserPanel/CurrentUserBox.js","App.js","index.js"],"names":["socket","theme","createMuiTheme","typography","fontFamily","fontSize","palette","primary","main","secondary","contrastText","loginRegisterStyles","makeStyles","root","height","paper","marginTop","marginLeft","marginRight","display","flexDirection","alignItems","form","width","spacing","image","background","bgImage","backgroundRepeat","backgroundSize","backgroundPosition","mainButton","margin","padding","secondaryButton","loginRegisterRedirect","marginBottom","loginRedirectText","color","backgroundImageText","RedirectToLogin","classes","history","useHistory","className","Grid","container","justify","item","Typography","variant","Button","id","type","size","onClick","push","RegisterForm","createUser","useState","username","setUserName","nickName","setNickName","password","setPassword","email","setEmail","showSnackbar","setShowSnackBar","errorMessage","setErrorMessage","handleCloseSnack","event","reason","LoginRedirect","alignContent","component","onSubmit","preventDefault","errors","length","test","Object","values","every","n","validate","name","xs","TextField","value","label","required","fullWidth","autoFocus","onChange","target","error","Boolean","helperText","disableElevation","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","registerService","create","credentials","a","axios","post","response","data","Register","message","setMessage","useStyle","Box","sm","justifyContent","style","align","letterSpacing","lineHeight","userObject","then","returnedUser","window","localStorage","setItem","JSON","stringify","catch","RedirectToRegister","LoginForm","loginUser","RegisterRedirect","fontWeight","loginService","login","Login","setTimeout","DRAWER_WIDTH","messengerStyle","chatInput","drawer","flexShrink","drawerPaper","overflowX","chatHeaderText","searchBarContainer","backgroundColor","fade","light","contentRight","currentUserAvatarColor","messageBox","sendingMessageContainer","receivingMessageContainer","sentMessageBackground","borderRadius","receivedMessageBackground","ChatBox","currentUser","messages","text","setText","sendMessage","Paper","map","i","sender","autoComplete","onKeyPress","key","disabled","trim","User","avatarBGColor","str","saturation","lightness","hash","charCodeAt","stringToHslColor","userListItem","cursor","avatarColor","userCardStyle","Card","paddingTop","borderBottom","borderWidth","borderBottomColor","elevation","CardHeader","avatar","Avatar","aria-label","substring","toUpperCase","title","UserList","users","filterUser","startConversation","List","reduce","acc","cur","toLowerCase","includes","ListItem","Filter","handler","sx","IconButton","p","InputBase","placeholder","inputProps","UserPanel","filteredName","setFilter","useStyles","FilterInput","usersService","getUsers","messengerService","createConversation","usernames","setToken","newToken","AccountMenu","setUser","setOpen","anchorRef","useRef","handleClose","handleListKeyDown","handleLogOut","removeItem","prevOpen","useEffect","current","focus","ref","startIcon","Popper","anchorEl","placement","transition","disablePortal","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","CurrentUserBox","Messenger","currentConversationID","setConversationID","existingChat","setExistingChat","setCurrentUser","setUsers","setMessages","io","loggedUserJSON","getItem","userLoggedIn","parse","userList","alert","participants","conversation","conversationInfo","user","emit","on","Drawer","anchor","userListContainer","bordertop","trimmedText","msg","App","token","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa29bf28.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport useStyle from \"../themes/messengerStyle\";\r\nimport ChatBox from \"../components/ChatBox\";\r\nimport UserPanel from \"../components/UserPanel/UserPanel\";\r\nimport usersService from \"../services/users\";\r\nimport messengerService from \"../services/messenger\";\r\nimport CurrentUserBox from \"../components/UserPanel/CurrentUserBox\";\r\nimport { CssBaseline, Drawer, Grid } from \"@material-ui/core\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nlet socket;\r\n\r\nconst Messenger = () => {\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n\r\n  const [currentConversationID, setConversationID] = useState(\"\");\r\n  const [existingChat, setExistingChat] = useState(false);\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  //Initialize SocketIO and users\r\n  useEffect(()=> {\r\n    socket = io();\r\n    const loggedUserJSON = window.localStorage.getItem(\"userAuthenticated\");\r\n    if (loggedUserJSON) {\r\n    // Set Current User \r\n      const userLoggedIn = JSON.parse(loggedUserJSON);\r\n      setCurrentUser(userLoggedIn);\r\n\r\n    //Set all current Users\r\n    usersService.getUsers({username: userLoggedIn.username})\r\n                .then( userList => setUsers(userList));\r\n    } else {\r\n      alert(\"You must be logged in\");\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history]);\r\n\r\n  //Function for Starting Chat\r\n  const startConversation = async (target) => {\r\n    setMessages([]);\r\n    const participants = { usernames: [currentUser.username, target.username]};\r\n\r\n    const conversation = await messengerService.createConversation(participants)\r\n    setExistingChat(true);\r\n    setConversationID(conversation.id);\r\n\r\n    //Show old messages if available\r\n    if (conversation.messages){\r\n      setMessages(conversation.messages);\r\n    }\r\n    const conversationInfo = {user: currentUser.username, target: target.username, id: conversation.id};\r\n    socket.emit(\"join\", conversationInfo);\r\n  }\r\n\r\n  //Get real-time message\r\n  useEffect(()=> {\r\n    socket.on(\"message\", message => {\r\n      setMessages(messages => [...messages, message]);\r\n    });\r\n  }, []);\r\n\r\n  //Send user message to Server\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    const trimmedText = text.trim();\r\n    const msg = { sender: currentUser.username, text: trimmedText };\r\n\r\n    if(msg){\r\n      socket.emit(\"sendMessage\", ({currentConversationID, msg}), () => setText(\"\"));\r\n    }\r\n    setText(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.drawer}>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          anchor=\"left\"\r\n          classes={{paper: classes.drawerPaper}}>\r\n          <CurrentUserBox currentUser={currentUser} setUser={setCurrentUser}/>\r\n          <UserPanel className={classes.userListContainer} users={users} currentUser={currentUser} startConversation={startConversation} />\r\n        </Drawer>\r\n      </div>\r\n      <div bordertop={1} className={classes.contentRight}>\r\n        {existingChat ? \r\n            <ChatBox currentUser={currentUser} messages={messages} text={text} setText={setText} sendMessage={sendMessage} />\r\n            : \r\n            <Box>\r\n              \r\n            </Box>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messenger;","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Open Sans\",\r\n    fontSize: 18,\r\n  },\r\n  palette: {\r\n    primary: { main: \"#1976d2\" },\r\n    secondary: { main: \"#fff\", contrastText: \"#1976d2\"},\r\n  }\r\n});","export default __webpack_public_path__ + \"static/media/bg-img.0c5628a9.png\";","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport bgImage from \"../assets/bg-img.png\";\r\n\r\n//Styling for Login and Registration Page\r\nconst loginRegisterStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: \"100vh\",\r\n    },\r\n    paper: {\r\n      marginTop: \"15%\",\r\n      marginLeft: \"15%\",\r\n      marginRight: \"15%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    image: {\r\n      background: `linear-gradient(180deg, rgba(58, 141, 255, 0.85), rgba(134, 185, 255, 0.85)), url(${bgImage})`,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\"\r\n    },\r\n    mainButton: {\r\n      margin: theme.spacing(7, 0, 2),\r\n      padding: theme.spacing(1, 3)\r\n    },\r\n    secondaryButton: {\r\n      margin: theme.spacing(1, 0, 0),\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n    loginRegisterRedirect: {\r\n        marginBottom: theme.spacing(5),\r\n        display: \"flex\",\r\n        flexDirection: \"horizontal\",\r\n        alignItems: \"end\",   \r\n        width: \"100%\"\r\n    },\r\n    loginRedirectText: {\r\n      marginTop: theme.spacing(2),\r\n      color: \"lightgrey\"\r\n    },\r\n    backgroundImageText: {\r\n      padding: theme.spacing(0, \"15%\")\r\n    }\r\n\r\n}));\r\n\r\nexport default loginRegisterStyles;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport loginRegisterStyles from \"../../themes/loginAndRegister\";\r\n\r\nconst RedirectToLogin = () => {\r\n  const classes = loginRegisterStyles();\r\n  const history = useHistory();\r\n\r\n  const redirectButton = () => {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.loginRegisterRedirect}>\r\n      <Grid container justify=\"flex-end\" spacing={2}>\r\n        <Grid item>\r\n          <Typography className={classes.loginRedirectText} variant=\"subtitle1\">\r\n          Already have an account?\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n        <Button\r\n          id=\"change-to-login-button\"\r\n          type=\"button\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          className={classes.secondaryButton}\r\n          onClick={redirectButton}\r\n        >\r\n          <b>Login</b>\r\n        </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RedirectToLogin;","import React, { useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport loginRegisterStyles from \"../../themes/loginAndRegister\";\r\nimport LoginRedirect from \"./LoginRedirect\";\r\n\r\n//createUser props will be the axios post call that will take user object created here as parameter\r\nconst RegisterForm = ({ createUser }) => {\r\n\r\n  const [username, setUserName] = useState(\"\");\r\n  const [nickName, setNickName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [showSnackbar, setShowSnackBar] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState( { });\r\n  const classes = loginRegisterStyles();\r\n\r\n  const validate = () => {\r\n    let errors = {};\r\n    errors.username = username.length > 2 ? \"\" : \"Minimum of 3 characters\";\r\n    errors.password = password.length > 5 ? \"\" : \"Minimum of 6 characters\";\r\n    errors.email = (/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)) ? \"\" : \"Email Format is xyz@xxx.xxx\";\r\n    setErrorMessage({ ...errors });\r\n\r\n    return Object.values(errors).every(n => n === \"\");\r\n  }\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUserName(event.target.value);\r\n  }\r\n  const handleNickNameChange = (event) => {\r\n    setNickName(event.target.value);\r\n  }\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  }\r\n  const handleCloseSnack = (event, reason) => {\r\n    setShowSnackBar(false);\r\n  };\r\n\r\n  const registerUser = (event) => {\r\n    event.preventDefault();\r\n\r\n    //Only send request when all validations are passed\r\n    if (validate()) {\r\n      createUser({\r\n        username: username,\r\n        name: nickName,\r\n        email: email,\r\n        password: password\r\n      })\r\n      setShowSnackBar(false);\r\n      setUserName(\"\");\r\n      setNickName(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    } else {\r\n      setShowSnackBar(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <LoginRedirect/>\r\n      <Grid container alignContent=\"flex-start\">\r\n          <Typography component=\"h1\" variant=\"h4\">\r\n              <b>Create an account</b>\r\n          </Typography>\r\n      </Grid>\r\n      <form className={classes.form} onSubmit={registerUser}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              value={username}\r\n              label=\"Username\"\r\n              id=\"username\"\r\n              required\r\n              fullWidth\r\n              autoFocus\r\n              onChange={handleUsernameChange}\r\n              error={Boolean(errorMessage.username)}\r\n              helperText={errorMessage.username ? errorMessage.username : \"\"}\r\n              />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              value={nickName}\r\n              label=\"Name\"\r\n              id=\"name\"\r\n              required\r\n              fullWidth\r\n              onChange={handleNickNameChange}\r\n              />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              value={email}\r\n              label=\"E-mail Address\"\r\n              id=\"email\"\r\n              required\r\n              fullWidth\r\n              onChange={handleEmailChange}\r\n              error={Boolean(errorMessage.email)}\r\n              helperText={errorMessage.email ? errorMessage.email : \"\"}\r\n              />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              value={password}\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              id=\"password\"\r\n              required\r\n              fullWidth\r\n              onChange={handlePasswordChange}\r\n              error={Boolean(errorMessage.password)}\r\n              helperText={errorMessage.password? errorMessage.password : \"\"}\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Button\r\n              id=\"create-button\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.mainButton}\r\n              disableElevation\r\n              >\r\n                <b>\r\n                  Create\r\n                </b>\r\n              </Button>\r\n            </Grid>\r\n        </Grid>\r\n      </form>\r\n      <div>\r\n        <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"right\"}} open = {showSnackbar} autoHideDuration={3000} onClose={handleCloseSnack}>\r\n          <Alert onClose={handleCloseSnack} severity=\"error\">\r\n            Please make sure all inputs are valid.\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;","import axios from \"axios\"; \r\n\r\nconst baseUrl = \"/register\";\r\n\r\nconst create = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  \r\n  return response.data;\r\n}\r\n\r\nconst registerService = {\r\n  create\r\n};\r\nexport default registerService;","import React, {useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useStyle from \"../themes/loginAndRegister\";\r\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\r\nimport RegistrationForm from \"../components/RegisterForm/RegisterForm\";\r\nimport registerService from \"../services/register\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst Register = () => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n    const classes = useStyle();\r\n\r\n    const createUser = (userObject) => {\r\n     registerService.create(userObject)\r\n                    .then(returnedUser => {\r\n                        setMessage(`Registration Successful! Welcome ${returnedUser.name}`);\r\n\r\n                        window.localStorage.setItem(\r\n                            \"userAuthenticated\", JSON.stringify(returnedUser)\r\n                        );\r\n\r\n                        history.push(\"/messenger\");\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(\"Something went wrong on our side. Please try again later\");\r\n                    })\r\n    }\r\n\r\n    return (\r\n        <Grid container className={classes.root}>\r\n            <Grid component={Box} xs={false} sm={5} className={classes.image} display={{ xs: \"none\", sm: \"block\" }}>\r\n                <Box width=\"100%\" height=\"100%\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n                    <TextsmsOutlinedIcon className={classes.backgroundImageText} color=\"secondary\" style={ { fontSize: \"90\" }} />\r\n                    <br/>\r\n                    <Typography className={classes.backgroundImageText} variant=\"h4\" color=\"secondary\" align=\"center\">\r\n                        <Box letterSpacing={2} lineHeight={1.5}>\r\n                            Converse with anyone at any moment\r\n                        </Box>\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7}>\r\n                {(message && \r\n                    <Alert severity=\"success\">\r\n                        {message}    \r\n                    </Alert>\r\n                )}\r\n                {(errorMessage && \r\n                    <Alert severity=\"error\">\r\n                        {errorMessage}\r\n                    </Alert>\r\n                )}\r\n                <RegistrationForm createUser={createUser} /> \r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport loginRegisterStyles from \"../../themes/loginAndRegister\";\r\n\r\nconst RedirectToRegister = () => {\r\n  const classes = loginRegisterStyles();\r\n  const history = useHistory();\r\n\r\n  const redirectButton = () => {\r\n    history.push(\"/register\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.loginRegisterRedirect}>\r\n      <Grid container justify=\"flex-end\" spacing={2}>\r\n        <Grid item>\r\n          <Typography className={classes.loginRedirectText} variant=\"subtitle1\">\r\n          Don't have an account?\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              className={classes.secondaryButton}\r\n              onClick={redirectButton}\r\n              >\r\n              <b>Create</b>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RedirectToRegister;","import React, { useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport loginRegisterStyles from \"../../themes/loginAndRegister\";\r\nimport RegisterRedirect from \"./RegisterRedirect\";\r\n\r\n//loginUser props will be the axios post call that will take user object created here as parameter\r\nconst LoginForm = ({ loginUser }) => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const classes = loginRegisterStyles();\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  }\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  const submitUser = (event) => {\r\n    event.preventDefault();\r\n\r\n      loginUser({\r\n        email: email,\r\n        password: password\r\n      })\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <RegisterRedirect />\r\n      <Grid container alignContent=\"flex-start\" >\r\n          <Typography component=\"h1\" variant=\"h4\" fontWeight=\"fontWeightBold\">\r\n              <b>Welcome Back!</b>\r\n          </Typography>\r\n      </Grid>\r\n      <form className={classes.form} onSubmit={submitUser}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              value={email}\r\n              id=\"email\"\r\n              label=\"E-mail\"\r\n              required\r\n              fullWidth\r\n              autoFocus\r\n              onChange={handleEmailChange}\r\n              />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              value={password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              required\r\n              fullWidth\r\n              onChange={handlePasswordChange}\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Button\r\n              type=\"submit\"\r\n              id=\"login-button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.mainButton}\r\n              disableElevation\r\n              >\r\n              <b>Login</b>\r\n              </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;","import axios from \"axios\"; \r\n\r\nconst baseUrl = \"/login\";\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  \r\n  return response.data;\r\n}\r\n\r\nconst loginService = {\r\n  login\r\n};\r\nexport default loginService;","import React, {useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\nimport loginService from \"../services/login\";\r\nimport useStyle from \"../themes/loginAndRegister\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nconst Login = () => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n    const classes = useStyle();\r\n\r\n    const loginUser = (userObject) => {\r\n        loginService.login(userObject)\r\n                    .then(returnedUser => {\r\n                        setMessage(`Login Successful! Redirecting to messager app`);\r\n\r\n                        window.localStorage.setItem(\r\n                            \"userAuthenticated\", JSON.stringify(returnedUser)\r\n                        );\r\n                        history.push(\"/messenger\");\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(\"Invalid Username or Password\");\r\n                        setTimeout(() => {\r\n                            setErrorMessage(null);\r\n                          }, 5000)\r\n                    })\r\n    }\r\n\r\n    return (\r\n        <Grid container className={classes.root}>\r\n            <Grid component={Box} xs={false} sm={5} className={classes.image} display={{ xs: \"none\", sm: \"block\" }}>\r\n                <Box width=\"100%\" height=\"100%\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n                    <TextsmsOutlinedIcon className={classes.backgroundImageText} color=\"secondary\" style={{ fontSize: \"90\" }} />\r\n                    <br/>\r\n                    <Typography className={classes.backgroundImageText} variant=\"h4\" color=\"secondary\" align=\"center\">\r\n                        <Box letterSpacing={2} lineHeight={1.5}>\r\n                             Converse with anyone at any moment\r\n                        </Box>\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7}>\r\n                {(message && \r\n                    <Alert severity=\"success\">\r\n                        {message}    \r\n                    </Alert>\r\n                )}\r\n                {(errorMessage && \r\n                    <Alert severity=\"error\">\r\n                        {errorMessage}\r\n                    </Alert>\r\n                )}\r\n                <LoginForm loginUser={loginUser} />    \r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fade } from \"@material-ui/core\";\r\n\r\nconst DRAWER_WIDTH = \"400px\";\r\n\r\nconst messengerStyle = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  chatInput:{\r\n    display: \"flex\",\r\n    flexDirection: \"horizontal\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  drawer: {\r\n    width: DRAWER_WIDTH,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: DRAWER_WIDTH,\r\n    overflowX: \"hidden\",\r\n  },\r\n  chatHeaderText: {\r\n    margin: theme.spacing (0, 2, 2, 2)\r\n  },\r\n  searchBarContainer: {\r\n    width: DRAWER_WIDTH,\r\n    margin: theme.spacing (0, 2, 2, 2),\r\n    backgroundColor: fade(theme.palette.primary.light, 0.25),\r\n  },\r\n  contentRight: {\r\n    width : `calc(100vw - ${DRAWER_WIDTH})`,\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    background:\"#F3F3F3\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(0, 2)\r\n  },\r\n  currentUserAvatarColor: {\r\n    background: `linear-gradient(180deg, rgba(58, 141, 255, 0.85), rgba(134, 185, 255, 0.85))`\r\n  },\r\n\r\n  //Styles for the Messages\r\n  messageBox: {\r\n    height: \"85vh\",\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  sendingMessageContainer: {\r\n    padding: theme.spacing(2, 3),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n\r\n  },\r\n  receivingMessageContainer: {\r\n    padding: theme.spacing(2, 3),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  sentMessageBackground: {\r\n    backgroundColor: \"#2979FF\",\r\n    color: \"white\",\r\n    borderRadius: \"20px\",\r\n    padding: theme.spacing(2, 5, 2, 4),\r\n  },\r\n  receivedMessageBackground: {\r\n    background: \"#F3F3F3\",\r\n    color: \"black\",\r\n    borderRadius: \"20px\",\r\n    padding: theme.spacing(2, 5, 2, 4),\r\n  }\r\n}));\r\n\r\nexport default messengerStyle;","import React from \"react\";\r\nimport useStyle from \"../themes/messengerStyle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst ChatBox = ({currentUser, messages, text, setText, sendMessage}) => {\r\n  const classes = useStyle();\r\n  \r\n  const handleText = (event) => {\r\n    event.preventDefault(); \r\n    setText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <div className={classes.messageBox}> \r\n        {messages.map((message, i) => \r\n          currentUser.username == message.sender ?\r\n          <div key={i} className={classes.sendingMessageContainer}>\r\n              <div className={classes.sentMessageBackground}>              \r\n                <b>{message.sender}:</b> {message.text}\r\n              </div>\r\n          </div> : \r\n          <div key={i} className={classes.receivingMessageContainer}>\r\n              <div className={classes.receivedMessageBackground}>              \r\n                <b>{message.sender}:</b> {message.text}\r\n              </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <form autoComplete=\"off\" className={classes.chatInput} onSubmit={sendMessage}>\r\n            <TextField\r\n              value={text}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              autoFocus\r\n              onChange={handleText}\r\n              onKeyPress={event => event.key === \"Enter\" ? sendMessage(event) : null}/>\r\n            <Button\r\n            disabled={text.trim() === \"\"}\r\n            type=\"button\"\r\n            onClick={sendMessage}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            disableElevation\r\n            >\r\n            Send\r\n            </Button>\r\n        </form>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default ChatBox;","import React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst User = ({username}) => {\r\n\r\n  //Randomize Avatar Color based on Usernames\r\n  const stringToHslColor = (str, saturation, lightness) => {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n  \r\n    let h = hash % 360;\r\n    return `hsl(${h}, ${saturation}%, ${lightness}%)`;\r\n  }\r\n\r\n  const avatarBGColor = stringToHslColor(username, 50, 80);\r\n\r\n  const userCardStyle = makeStyles(() => ({\r\n    userListItem: {\r\n      width: \"100%\",\r\n      cursor: \"pointer\"\r\n    },\r\n    avatarColor: {\r\n      background: `${avatarBGColor}`,\r\n      width: \"50px\",\r\n      height: \"50px\"\r\n    }\r\n}))\r\n\r\nconst classes = userCardStyle();\r\n\r\n  return (\r\n    <Card className={classes.userListItem} \r\n    style= {{height: \"100px\", paddingTop: \"8px\", borderBottom: \"solid\", borderWidth: \"2px\", \r\n              borderBottomColor: \"rgba(230, 230, 230, 0.5)\",\r\n              borderRadius: \"2px\",\r\n              marginBottom: \"-15px\"}} elevation={0}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar className= {classes.avatarColor} aria-label=\"users\" >\r\n            {username.substring(0, 1).toUpperCase()}\r\n          </Avatar>\r\n        }  \r\n        title={<b>{username}</b>}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport User from \"./User\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\n\r\nconst UserList = ({users, filterUser, startConversation}) => {\r\n\r\n  const reduceUsers = (acc, cur) => {\r\n    if (cur.username.toLowerCase().includes(filterUser.toLowerCase())){\r\n      return [...acc, \r\n        <ListItem key={cur.id} onClick={() => startConversation(cur)}>\r\n         <User username={cur.username}/>\r\n        </ListItem>\r\n      ];\r\n    }\r\n    return acc;\r\n  }\r\n\r\n  return (\r\n     <List>\r\n       {users ? users.reduce(reduceUsers, []) : null}\r\n     </List>\r\n  )\r\n}\r\n\r\nexport default UserList;","import React from \"react\"\r\nimport {  IconButton, InputBase, Paper } from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst Filter = ({name, handler}) => {\r\n\r\n    return (\r\n      <Paper\r\n        style={{\r\n          background: `rgba(163, 198, 255, 0.3)`,\r\n          height: 65,\r\n          width: 350,\r\n          display: 'flex', alignItems: 'center',\r\n          marginLeft: \"16px\"\r\n        }}\r\n        sx={{ height: 300 }}\r\n        elevation = {0}\r\n      >\r\n        <IconButton sx={{ p: '10px' }} aria-label=\"search\" disabled=\"true\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          placeholder=\"Search\"\r\n          id=\"search-bar\"\r\n          inputProps={{ 'aria-label': 'Search' }}\r\n          value={name}\r\n          onChange={handler}\r\n        />\r\n      </Paper>\r\n    )\r\n  }\r\n\r\nexport default Filter;","import UserList from \"./UserList\";\r\nimport FilterInput from \"./FilterContacts/FilterInput\";\r\nimport React, { useState } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport useStyles from '../../themes/messengerStyle'\r\n\r\nconst UserPanel = ({users, startConversation}) => {\r\n  const [filteredName, setFilter] = useState(\"\");\r\n\r\n  const handleFilter = (event) => {\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Typography className={classes.chatHeaderText} variant=\"h4\" style={{marginBottom: 10}} >Chats</Typography>\r\n      <FilterInput name={filteredName} handler={handleFilter} />\r\n      <UserList users={users} filterUser={filteredName} startConversation={startConversation} />\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default UserPanel;","import axios from \"axios\"; \r\n\r\nconst baseUrl = \"/users\";\r\n\r\nconst getUsers = async username => {\r\n  const response = await axios.post(baseUrl, username);\r\n  \r\n  return response.data;\r\n}\r\n\r\nconst usersService = {\r\n  getUsers\r\n};\r\nexport default usersService;","import axios from \"axios\"; \r\n\r\nconst baseUrl = \"/messages\";\r\n\r\nlet token = null\r\n\r\nconst createConversation = async usernames => {\r\n  const response = await axios.post(baseUrl, usernames);\r\n  \r\n  return response.data;\r\n}\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n}\r\n\r\nconst messengerService = {\r\n  createConversation,\r\n  setToken\r\n};\r\nexport default messengerService;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nconst AccountMenu = ({setUser}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListKeyDown = (event) => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === 'Escape') {\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  //Handle Logging Out\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = (event) => {\r\n    window.localStorage.removeItem(\"userAuthenticated\");\r\n    history.push(\"/register\");\r\n    setUser(null);\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = useRef(open);\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          id=\"show-account-setting\"\r\n          onClick={handleToggle}\r\n          size=\"large\" \r\n          startIcon={<MoreHorizIcon/>}\r\n        >\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          placement=\"bottom-start\"\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === 'bottom-start' ? 'left top' : 'left bottom',\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem id=\"logout-button\" onClick={handleLogOut}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AccountMenu;","import { Avatar, Box, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport useStyles from '../../themes/messengerStyle'\r\nimport AccountMenu from \"../AccountMenu\";\r\n\r\nconst CurrentUserBox = ({currentUser, setUser}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" flexDirection=\"row\" style={{width: \"100%\", margin: 20,}}>\r\n      <Avatar className={classes.currentUserAvatarColor} \r\n          style={{width:\"60px\", height:\"60px\", marginLeft: 5 , marginRight: 24}}/>\r\n      <Typography style={{marginRight:6}} >\r\n        <b>{currentUser ? currentUser.username: \"None\"}</b>\r\n      </Typography>\r\n      <AccountMenu size=\"small\" startIcon={<MoreHorizIcon/>} setUser={setUser}/>\r\n    </Box>\r\n  )\r\n};\r\n\r\nexport default CurrentUserBox;","import React, {useState, useEffect } from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { theme } from \"./themes/theme\";\r\nimport Register from \"./pages/Register\";\r\nimport Login from \"./pages/Login\";\r\nimport Messenger from \"./pages/Messenger\";\r\nimport messengerService from \"./services/messenger\";\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(()=> {\r\n    const loggedUserJSON = window.localStorage.getItem(\"userAuthenticated\");\r\n    if (loggedUserJSON) {\r\n      const userLoggedIn = JSON.parse(loggedUserJSON);\r\n      setUser(userLoggedIn);\r\n      messengerService.setToken(userLoggedIn.token)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/messenger\">\r\n            <Messenger/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {user ? <Redirect to=\"/messenger\"/> : <Register />}\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}